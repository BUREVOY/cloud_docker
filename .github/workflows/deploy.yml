name: Build, Test, and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/flask-app
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        run: echo "Checkout repository"
      
      - name: Deploy to Server
        run: echo "Deploy to Server"

      - name: Prepare Server Directory
        run: echo "Prepare Server Directory"


      # - name: Checkout repository
      #   uses: actions/checkout@v2

      # - name: Deploy to Server
      #   uses: rembo/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     script: |
      #       sudo apt-get update
      #       sudo apt-get install -y docker.io certbot

      #       # Остановка веб-сервера, если он активен
      #       sudo systemctl stop nginx || true
            
      #       # Обновление сертификата с помощью Certbot
      #       sudo certbot certonly --standalone -d ars-cite.ru --non-interactive --agree-tos -m tima.privalov@bk.ru
            
      #       # Запуск веб-сервера после обновления сертификата
      #       sudo systemctl start nginx || true

      # - name: Prepare Server Directory
      #   uses: rembo/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     script: |
      #       mkdir -p /home/${{ secrets.HOSTING_NAME }}/app/

      # - name: Copy Templates Directory
      #   uses: rembo/scp-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     source: templates
      #     target: "/home/${{ secrets.HOSTING_NAME }}/app/"

      # - name: Copy Deployment Files
      #   uses: rembo/scp-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     source: docker-compose.yml
      #     target: "/home/${{ secrets.HOSTING_NAME }}/app/"

      # - name: Copy Templates Files
      #   uses: rembo/scp-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     source: templates/docs.html
      #     target: "/home/${{ secrets.HOSTING_NAME }}/app/templates/"

      # - name: Copy Prometheus Config File
      #   uses: rembo/scp-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     source: prometheus.yml
      #     target: "/home/${{ secrets.HOSTING_NAME }}/app/"

      # - name: Copy Logstash Config File
      #   uses: rembo/scp-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     source: logstash.conf
      #     target: "/home/${{ secrets.HOSTING_NAME }}/app/"

      # - name: Deploy New Docker Image
      #   uses: rembo/ssh-action@v0.1.0
      #   with:
      #     host: ${{ secrets.HOSTING_SERVER }}
      #     username: ${{ secrets.HOSTING_NAME }}
      #     password: ${{ secrets.HOSTING_PASSWORD }}
      #     script: |
      #       cd /home/${{ secrets.HOSTING_NAME }}/app
      #       docker-compose down
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
      #       docker-compose up --scale web=3 -d
